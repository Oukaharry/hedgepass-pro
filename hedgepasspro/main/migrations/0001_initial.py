# Generated by Django 5.2 on 2025-04-13 00:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(blank=True, max_length=150, verbose_name='username')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='phone number')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='2FA enabled')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='AccountPair',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prop_account_login', models.CharField(max_length=50, verbose_name='Prop Account Login')),
                ('prop_account_password', models.CharField(max_length=100, verbose_name='Prop Account Password')),
                ('prop_account_server', models.CharField(max_length=100, verbose_name='Prop Account Server')),
                ('prop_account_trading_type', models.CharField(choices=[('manual', 'Manual Trading'), ('algo', 'Algorithmic Trading')], default='manual', max_length=10, verbose_name='Trading Type')),
                ('live_account_login', models.CharField(max_length=50, verbose_name='Live Account Login')),
                ('live_account_password', models.CharField(max_length=100, verbose_name='Live Account Password')),
                ('live_account_server', models.CharField(max_length=100, verbose_name='Live Account Server')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_pairs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account Pair',
                'verbose_name_plural': 'Account Pairs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('live_equity', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='live equity')),
                ('hedge_equity', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='hedge equity')),
                ('efficiency', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='efficiency')),
                ('trades_count', models.PositiveIntegerField(default=0, verbose_name='trades count')),
                ('pair', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_data', to='main.accountpair')),
            ],
            options={
                'verbose_name': 'Performance Data',
                'verbose_name_plural': 'Performance Data',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='main_perfor_date_50f009_idx'), models.Index(fields=['pair'], name='main_perfor_pair_id_d7c629_idx')],
            },
        ),
    ]
